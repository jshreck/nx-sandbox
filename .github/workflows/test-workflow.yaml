name: Test Workflow
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - dev
          - prod
        description: 'The environment to deploy to'
        required: true
        default: 'dev'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Action
        uses: ./.github/actions/test-action
        with:
          test_value: 'Hello World'

  fake-deploy:
    name: ðŸš€ Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: 'https://example.com'
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const ref = context.ref;
            const environment = ${{inputs.environment}}
            const description = 'Deploying app to ${{inputs.environment}}';

            await github.rest.repos.createDeployment({
              owner,
              repo,
              ref,
              environment,
              description,
              required_contexts: [],
              auto_merge: false,
              payload: {
                sha: ${{ github.sha }},
              },
            });

      - name: Update deployment status
        run: |
          gh api repos/${{ github.repository }}/deployments/${{ steps.create_deploy.outputs.deployment_id }}/statuses \
            -f state=success \
            -f environment_url="https://my-app.example.com" \
            -f description="Deployment succeeded ðŸš€"
